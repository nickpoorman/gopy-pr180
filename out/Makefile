# Makefile for python interface for package hi.
# File is generated by gopy. Do not edit.
# gopy build -vm=python3 -output=/out github.com/go-python/gopy/_examples/hi

GOCMD=go
GOBUILD=$(GOCMD) build
GOIMPORTS=goimports
PYTHON=/usr/bin/python3
PYTHON_CFG=$(PYTHON)-config
LIBEXT=.so

# get the CC and flags used to build python:
GCC = $(shell $(GOCMD) env CC)
CFLAGS = $(shell $(PYTHON_CFG) --cflags)
LDFLAGS = $(shell $(PYTHON_CFG) --ldflags)

all: gen build

gen:
	gopy gen -vm=python3 github.com/go-python/gopy/_examples/hi

build:
	# build target builds the generated files -- this is what gopy build does..
	# this will otherwise be built during go build and may be out of date
	- rm hi.c
	# goimports is needed to ensure that the imports list is valid
	$(GOIMPORTS) -w hi.go
	# generate hi_go$(LIBEXT) from hi.go -- the cgo wrappers to go functions
	$(GOBUILD) -buildmode=c-shared -o hi_go$(LIBEXT) hi.go
	# use pybindgen to build the hi.c file which are the CPython wrappers to cgo wrappers..
	# note: pip install pybindgen to get pybindgen if this fails
	$(PYTHON) build.py
	# build the _hi$(LIBEXT) library that contains the cgo and CPython wrappers
	# generated hi.py python wrapper imports this c-code package
	$(GCC) hi.c  hi_go$(LIBEXT) -o _hi$(LIBEXT) $(CFLAGS) $(LDFLAGS) -fPIC --shared -w
	


